- name: install additional packages
  apt:
    name: ['software-properties-common', 'dirmngr', 'apt-transport-https']
    state: latest

- name: import the MariaDB apt key
  apt_key:
    url: https://mariadb.org/mariadb_release_signing_key.asc
    state: present
  become: true

- name: Add MariaDB repository
  apt_repository: repo='deb [arch=amd64,arm64,ppc64el] https://mariadb.mirror.serveriai.lt/repo/{{ mysql_major_version }}/ubuntu bionic main' 
    state=present
    
- name: install MariaDB packages
  apt:
    name: ['mariadb-server', 'mariadb-client', 'python-pip', 'python-dev', 'libmysqlclient-dev', 'python-pymysql']
    state: latest
    update_cache: True

    #- name: Installing pip dependencies
    #  pip:
    #   name: MySQL-python

- name: Ensure mariadb service is running
  systemd:
    name: mariadb
    state: started
    enabled: yes

- name: Ensure root user can only login from localhost
  mysql_user:
    login_password: "{{ mysql_root_password }}"
    check_implicit_admin: yes
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    state: present
  with_items:
    - localhost
    - 127.0.0.1
    - ::1

- name: Add .my.cnf to root home
  template:
    src: root-my.cnf.j2
    dest: /root/.my.cnf

#Make config file and restart MariDB
- name: copy MariaDB config 
  template:
    src: ubuntu-my.cnf.j2
    dest: /etc/my.cnf
  notify:
    - Restart MariaDB

#Make somethig like mysql_secure_installation 
- name: Reload privilege tables
  command: |
    mysql -p{{ mysql_root_password }} -ne "{{ item }}"
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False

- name: Remove anonymous users
  command: |
    mysql -p{{ mysql_root_password }} -ne "{{ item }}"
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: False

- name: Disallow root login remotely
  command: |
    mysql -p{{ mysql_root_password }} -ne "{{ item }}"
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False

- name: Remove test database and access to it
  command: |
    mysql -p{{ mysql_root_password }} -ne "{{ item }}"
  with_items:
    - DROP DATABASE IF EXISTS test
    - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
  changed_when: False

- name: Reload privilege tables
  command: |
    mysql -p{{ mysql_root_password }} -ne "{{ item }}"
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False

#Create firewall rules + enable and start iptables
- name: Add iptables config
  template:
    src: redhat-iptables.j2
    dest: /etc/iptables/rules.v4

- name: Enable and restart netfilter-persistent service
  systemd:
    name: netfilter-persistent
    state: restarted


