- name: install additional packages
  apt:
    name: ['curl', 'gnupg2', 'ca-certificates', 'lsb-release', 'debian-archive-keyring', 'software-properties-common' ]
    state: latest

- name: import the nginx apt key
  ansible.builtin.apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    state: present

- name: Add nginx repository
  apt_repository: repo='deb https://nginx.org/packages/ubuntu/ bionic nginx'
    state=present

- name: install nginx packages
  apt:
    name: nginx
    state: latest
    update_cache: True

- name: Ensure nginx service is running
  systemd:
    name: nginx
    state: started
    enabled: yes

#Make config file and restart nginx
- name: copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
    - Restart nginx

#Install and configure php-fpm      
- name: Installing ppa:ondrej Repository
  apt_repository:
    repo: 'ppa:ondrej/php'
    state: present
    update_cache: yes

- name: Installing php 7.4
  apt:
    name: [ 'php7.4', 'php7.4-common', 'php7.4-cli', 'php7.4-gd', 'php7.4-curl', 'php7.4-mysqlnd', 'php7.4-fpm', 'php7.4-mysqli', 'php7.4-mcrypt', 'php7.4-mbstring', 'php7.4-zip' ]
    state: latest
    update_cache: yes

- name: Ensure php-fpm service is running
  systemd:
    name: php7.4-fpm
    state: started
    enabled: yes

#Make config file and restart php-fpm
- name: copy php.ini config
  template:
    src: php.ini.j2
    dest: /etc/php.ini
  notify:
    - Restart php7.4-fpm
 
#Create firewall rules + enable and start iptables
- name: Add iptables config
  template:
    src: redhat-iptables.j2
    dest: /etc/iptables/rules.v4

- name: Enable and restart netfilter-persistent service
  systemd:
    name: netfilter-persistent
    state: restarted

